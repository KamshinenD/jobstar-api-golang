basePath: /api/v1
definitions:
  models.AuthResponse:
    properties:
      data:
        $ref: '#/definitions/models.Data'
      message:
        description: Error message
        type: string
      response_code:
        description: HTTP status code
        type: integer
    type: object
  models.Data:
    properties:
      token:
        type: string
    type: object
  models.ErrorData:
    type: object
  models.ErrorResponse:
    properties:
      data:
        $ref: '#/definitions/models.ErrorData'
      message:
        description: Error message
        type: string
      response_code:
        description: HTTP status code
        type: integer
    type: object
  models.JobRequest:
    properties:
      company:
        type: string
      jobLocation:
        type: string
      jobType:
        type: string
      position:
        type: string
      status:
        type: string
    type: object
  models.SuccessResponse:
    properties:
      data: {}
      message:
        description: Error message
        type: string
      response_code:
        description: HTTP status code
        type: integer
    type: object
  models.UserLoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
    type: object
  models.UserRegisterRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      location:
        type: string
      password:
        type: string
    type: object
  models.UserUpdateRequest:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      location:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an API for managing and tracking jobs.
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User Login Data
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login a user
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - Auth
  /auth/updateUser:
    patch:
      consumes:
      - application/json
      description: Updates the authenticated user's details
      parameters:
      - description: User Update Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user details
      tags:
      - Auth
  /auth/verifyAccount:
    get:
      consumes:
      - application/json
      description: Verifies a user's email account using the link sent to your email
      parameters:
      - description: User Email
        in: query
        name: e
        required: true
        type: string
      - description: Verification Token
        in: query
        name: t
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify user's email account
      tags:
      - Auth
  /jobs:
    get:
      description: Gets all Jobs created by user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all jobs for user
      tags:
      - Job
  /jobs/{id}:
    delete:
      description: Deletes a job using its ID
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get job by ID
      tags:
      - Job
    get:
      description: Retrieves a job using its ID
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get job by ID
      tags:
      - Job
    patch:
      consumes:
      - application/json
      description: Updates the authenticated user's details
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: string
      - description: User UpdateJob Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.JobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Job details
      tags:
      - Job
  /jobs/stats:
    get:
      description: Shows stats all jobs for user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Shows stats all jobs for user
      tags:
      - Job
swagger: "2.0"
